
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Address;
import javax.mail.Flags;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Part;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeUtility;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author HP
 */
public class ReadMail extends javax.swing.JFrame {

     /**
      * Creates new form ReadMail
      */
     private static Message msg;
     private ArrayList<MimeBodyPart> listFile = new ArrayList<>();
     private static User user;
     private String listFilePath = "";// danh sách đường dẫn tệp chứa trong mail chuyển tiếp
     private String contentEmailForward = "";// nội dung email chuyển tiếp
     private static Folder ibox;
     private String subjectForward = "";// chủ đề email chuyển tiếp
     private static Properties props;
     public ReadMail(Message msg, User user,Folder ibox,Properties props) throws MessagingException, IOException {
          initComponents();
          setSize(1000, 600);
          setLocationRelativeTo(this);
          this.setTitle("Read Mail");
          this.msg = msg;
          this.user = user;
          this.ibox=ibox;
          this.props=props;
          HienThu();
     }

     private void HienThu() throws MessagingException, UnsupportedEncodingException, IOException {
          Address[] fromAddress = msg.getFrom();// trar ve danh sach nguoi gui trong thuoc tinh from cua thu
          String from = fromAddress[0].toString();
          from = MimeUtility.decodeText(from.replaceAll("\"", ""));

          String subject = msg.getSubject();// lay chu de cua thu
          String toList = parseAddresses(msg.getRecipients(Message.RecipientType.TO));// lấy địa chỉ người cũng nhận được thư.có thể ở dạng TO hoặc CC
          String ccList = parseAddresses(msg.getRecipients(Message.RecipientType.CC));
          String sentDate = msg.getSentDate().toString();
          String contentType = msg.getContentType();
          String messageContent = "";
          String attachFiles = "";
          if (contentType.contains("multipart")) {
               Multipart multipart = (Multipart) msg.getContent();
               System.out.println(multipart.getCount());
               for (int j = 0; j < multipart.getCount(); j++) {
                    MimeBodyPart part = (MimeBodyPart) multipart.getBodyPart(j);
                    if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition())) // day la phan tep duoc dinh kem
                    {
                         listFile.add(part);
                         file.addItem(part.getFileName());
                    } else {
                         // day la phan noi dung
                         messageContent += part.getContent().toString();
                    }
               }

          } else if (contentType.contains("text/plain") || contentType.contains("text/html")) {
               Object content = msg.getContent();
               if (content != null) {
                    messageContent = content.toString();
               }
          }
          this.from.setText(from);
          this.date.setText(sentDate);
          this.to.setText("TO:" + toList + "\n" + "CC: " + ccList);
          this.subject.setText(subject);
          if (listFile.size() == 0) {// nếu không có tệp đính kèm
               file.addItem("không có tệp đính kèm");
          }
          contentEmailForward += "<div>Từ: " + from + "</div>\n" + "<div>Đã gửi: " + sentDate + "</div>\n" + "<div>Đến: " + user.getUsername() + "</div>\n" + "<div>Chủ đề: " + subject + "</div>\n" + messageContent;
          subjectForward = "Ct: " + subject;
          this.NoiDung.setText(messageContent);
     }

     private String parseAddresses(Address[] address) {
          String listAddress = "";
          if (address != null) {
               for (int i = 0; i < address.length; i++) {
                    listAddress += address[i].toString() + ", ";
               }
          }
          if (listAddress.length() > 1) {
               listAddress = listAddress.substring(0, listAddress.length() - 2);// loai bo dau , o cuoi chuoi
          }
          return listAddress;
     }

     /**
      * This method is called from within the constructor to initialize the form. WARNING:
      * Do NOT modify this code. The content of this method is always regenerated by the
      * Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {

          jLabel1 = new javax.swing.JLabel();
          nameEmail = new javax.swing.JLabel();
          jLabel2 = new javax.swing.JLabel();
          jLabel3 = new javax.swing.JLabel();
          jLabel4 = new javax.swing.JLabel();
          jLabel5 = new javax.swing.JLabel();
          jLabel6 = new javax.swing.JLabel();
          jLabel7 = new javax.swing.JLabel();
          from = new javax.swing.JLabel();
          date = new javax.swing.JLabel();
          to = new javax.swing.JLabel();
          subject = new javax.swing.JLabel();
          jLabel9 = new javax.swing.JLabel();
          back = new javax.swing.JButton();
          chuyentiep = new javax.swing.JButton();
          jScrollPane1 = new javax.swing.JScrollPane();
          NoiDung = new javax.swing.JTextArea();
          file = new javax.swing.JComboBox<>();
          jButton1 = new javax.swing.JButton();
          jButton2 = new javax.swing.JButton();
          jButton3 = new javax.swing.JButton();
          jButton4 = new javax.swing.JButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

          jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\HP\\Downloads\\btl_demo-main\\btl_demo-main\\btl\\src\\anh1.png")); // NOI18N
          jLabel1.setText("jLabel1");

          nameEmail.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          nameEmail.setText("jLabel2");

          jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel2.setText("Đọc thư");

          jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel3.setText("Tới: ");

          jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel4.setText("Chủ đề: ");

          jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel5.setText("Nội dung:");

          jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel6.setText("Từ:");

          jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel7.setText("Ngày gửi: ");

          from.setText("from");

          date.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
          date.setText("date");

          to.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
          to.setText("to/cc");

          subject.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
          subject.setText("subject");

          jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          jLabel9.setText("Tệp đính kèm:");

          back.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          back.setText("Đóng");
          back.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    backActionPerformed(evt);
               }
          });

          chuyentiep.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
          chuyentiep.setText("Chuyển tiếp");
          chuyentiep.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    chuyentiepActionPerformed(evt);
               }
          });

          NoiDung.setColumns(20);
          NoiDung.setRows(5);
          jScrollPane1.setViewportView(NoiDung);

          file.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    fileActionPerformed(evt);
               }
          });

          jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
          jButton1.setText("Tải xuống");
          jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButton1MouseClicked(evt);
               }
          });

          jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
          jButton2.setText("Tải xuống tất cả");
          jButton2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
               }
          });

          jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
          jButton3.setText("Xóa");
          jButton3.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
               }
          });

          jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
          jButton4.setText("Trả lời");
          jButton4.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addContainerGap()
                              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(nameEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addGroup(layout.createSequentialGroup()
                              .addGap(40, 40, 40)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                             .addGap(133, 133, 133)
                                             .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                  .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                  .addGroup(layout.createSequentialGroup()
                                                       .addComponent(back)
                                                       .addGap(60, 60, 60)
                                                       .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                       .addGap(53, 53, 53)
                                                       .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                       .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                       .addComponent(chuyentiep, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                             .addGap(226, 226, 226))
                                        .addGroup(layout.createSequentialGroup()
                                             .addComponent(jLabel9)
                                             .addGap(0, 0, Short.MAX_VALUE)))
                                   .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                             .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                       .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                       .addComponent(jLabel4)
                                                       .addComponent(jLabel7)
                                                       .addComponent(jLabel5))
                                                  .addGap(53, 53, 53)
                                                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                       .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                       .addComponent(subject)
                                                       .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                                                       .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                             .addGroup(layout.createSequentialGroup()
                                                  .addGap(787, 787, 787)
                                                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                       .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                       .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                             .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                             .addGap(53, 53, 53)
                                             .addComponent(to, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGap(1, 1, 1))
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addContainerGap()
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                   .addComponent(nameEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE))
                         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabel2)
                              .addGap(27, 27, 27)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel6)
                         .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(jLabel7))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel3)
                         .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                         .addComponent(jLabel4)
                         .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel5)
                         .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(jLabel9)
                         .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(file))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2)
                    .addGap(0, 0, 0)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(back)
                         .addComponent(chuyentiep)
                         .addComponent(jButton3)
                         .addComponent(jButton4))
                    .addGap(26, 26, 26))
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
         // TODO add your handling code here:
         this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_fileActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
         // tải tệp theo tùy chọn
         int row = file.getSelectedIndex();
         if (row >= 0 && row < listFile.size())// chọn file để tải xuống -- mặc định lưu về downloads
         {
              MimeBodyPart part = listFile.get(row);
              try {
                   String path = "C:/Users/HP/Downloads" + File.separator + file.getItemAt(row);
                   part.saveFile(path);
                   JOptionPane.showMessageDialog(this, "tai thanh cong");
              } catch (MessagingException ex) {
                   Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
              } catch (IOException ex) {
                   Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
              }
         }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         // tải tất cả các tệp đính kèm
          for (MimeBodyPart part : listFile) {
              try {

                   part.saveFile("C:/Users/HP/Downloads" + File.separator + part.getFileName());
               } catch (MessagingException ex) {
                   Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
               } catch (IOException ex) {
                   Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
               }
          }
         JOptionPane.showMessageDialog(this, "tai thanh cong");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chuyentiepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chuyentiepActionPerformed
         // TODO add your handling code here:
         for (MimeBodyPart part : listFile) {
              try {
                   String path = "C:/Users/HP/Downloads" + File.separator + part.getFileName();
                   part.saveFile(path);
                   listFilePath += path + "\n";
              } catch (MessagingException ex) {
                   Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
              } catch (IOException ex) {
                   Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
              }
         }
         System.out.println("tải thành công");
         (new ForwardMail(user, listFilePath, contentEmailForward, subjectForward)).setVisible(true);
    }//GEN-LAST:event_chuyentiepActionPerformed

     private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          // xoa email
          try {
               // TODO add your handling code here:
               msg.setFlag(Flags.Flag.DELETED, true);
               boolean expunge=true;
               ibox.close(expunge);// xóa thư mục để xóa email đc đánh dấu đã xóa
               JOptionPane.showMessageDialog(this,"Email da bi xoa");
               new Home(user, props).setVisible(true);
               this.dispose();
          } catch (MessagingException ex) {
               Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
               Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
          }
          
     }//GEN-LAST:event_jButton3ActionPerformed

     private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
          // TODO add your handling code here:
          // trả lời email
          new ReplyEmail(msg,user).setVisible(true);
     }//GEN-LAST:event_jButton4ActionPerformed

     /**
      * @param args the command line arguments
      */
     public static void main(String args[]) {
          /* Set the Nimbus look and feel */
          //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
          /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
           */
          try {
               for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                         javax.swing.UIManager.setLookAndFeel(info.getClassName());
                         break;
                    }
               }
          } catch (ClassNotFoundException ex) {
               java.util.logging.Logger.getLogger(ReadMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (InstantiationException ex) {
               java.util.logging.Logger.getLogger(ReadMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex) {
               java.util.logging.Logger.getLogger(ReadMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (javax.swing.UnsupportedLookAndFeelException ex) {
               java.util.logging.Logger.getLogger(ReadMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
          //</editor-fold>

          /* Create and display the form */
          java.awt.EventQueue.invokeLater(new Runnable() {
               public void run() {
                    try {
                         new ReadMail(msg, user,ibox,props).setVisible(true);
                    } catch (MessagingException ex) {
                         Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                         Logger.getLogger(ReadMail.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
          });
     }

     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JTextArea NoiDung;
     private javax.swing.JButton back;
     private javax.swing.JButton chuyentiep;
     private javax.swing.JLabel date;
     private javax.swing.JComboBox<String> file;
     private javax.swing.JLabel from;
     private javax.swing.JButton jButton1;
     private javax.swing.JButton jButton2;
     private javax.swing.JButton jButton3;
     private javax.swing.JButton jButton4;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
     private javax.swing.JLabel jLabel5;
     private javax.swing.JLabel jLabel6;
     private javax.swing.JLabel jLabel7;
     private javax.swing.JLabel jLabel9;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JLabel nameEmail;
     private javax.swing.JLabel subject;
     private javax.swing.JLabel to;
     // End of variables declaration//GEN-END:variables
}

// zpcijonhzjjlnqxv
